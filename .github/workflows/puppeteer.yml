name: Run Puppeteer Script

on:
  workflow_dispatch:
    inputs:
      host:
        description: "主机地址 (HOST)"
        required: true
        type: string

      team_id:
        description: "团队ID (TEAM_ID)"
        required: true
        type: string

      PROTAL_KEY:
        description: "门户Key (PROTAL_KEY) - 从菜单运行时需要"
        required: false
        type: string

      cookie_name:
        description: "Cookie名称 (COOKIE_NAME)"
        required: true
        type: string

      cookie_value:
        description: "Cookie值 (COOKIE_VALUE)"
        required: true
        type: string

      cookie_domain:
        description: "Cookie域名 (COOKIE_DOMAIN)"
        required: true
        type: string
        default: ".terminus.io"

      from:
        description: "运行模式 (--from)"
        required: true
        type: choice
        options:
          - "menu"
          - "module"
          - "modules"
        default: "menu"

      parallel:
        description: "并行数量 (--parallel)"
        required: false
        type: number
        default: 4

      timeout:
        description: "超时时间(毫秒) (--timeout)"
        required: false
        type: number
        default: 30000

jobs:
  run-puppeteer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Install Chrome for Puppeteer
        run: npx puppeteer browsers install chrome

      - name: Run Puppeteer Script
        env:
          HOST: ${{ inputs.host }}
          TEAM_ID: ${{ inputs.team_id }}
          PROTAL_KEY: ${{ inputs.PROTAL_KEY }}
          APP_ID: ${{ inputs.app_id }}
          BRANCH_ID: ${{ inputs.branch_id }}
          COOKIE_NAME: ${{ inputs.cookie_name }}
          COOKIE_VALUE: ${{ inputs.cookie_value }}
          COOKIE_DOMAIN: ${{ inputs.cookie_domain }}
        run: |
          ARGS="--from ${{ inputs.from }}"

          if [ -n "${{ inputs.parallel }}" ]; then
            ARGS="$ARGS --parallel ${{ inputs.parallel }}"
          fi

          if [ -n "${{ inputs.timeout }}" ]; then
            ARGS="$ARGS --timeout ${{ inputs.timeout }}"
          fi

          echo "Running with arguments: $ARGS"
          pnpm start $ARGS

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: puppeteer-logs-${{ github.run_number }}
          path: logs/
          retention-days: 30

      - name: Upload error logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: puppeteer-error-logs-${{ github.run_number }}
          path: logs/errors-*.log
          retention-days: 30
